(test
 (name test)
 (package ortac-wrapper)
 (libraries alcotest ortac-runtime)
 (instrumentation
  (backend bisect_ppx)))

(rule
 (copy lib.mli wrapper.mli))

(rule
 (target wrapper.ml)
 (package ortac-wrapper)
 (deps
  (package ortac-core)
  (package ortac-wrapper))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   wrapper
   (with-stderr-to
    errors
    (run ortac wrapper -o %{target} %{dep:lib.mli})))))

(rule
 (alias runtest)
 (package ortac-wrapper)
 (action
  (progn
   (diff errors.expected errors)
   (diff wrapper.expected.ml wrapper.ml))))

(rule
 (copy lib_behaviour.mli wrapper_behaviour.mli))

(rule
 (target wrapper_behaviour.ml)
 (package ortac-wrapper)
 (deps
  (package ortac-core)
  (package ortac-wrapper))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   wrapper
   (with-stderr-to
    errors_behaviour
    (run ortac wrapper -o %{target} %{dep:lib_behaviour.mli})))))

(rule
 (alias runtest)
 (package ortac-wrapper)
 (action
  (progn
   (diff errors_behaviour.expected errors_behaviour)
   (diff wrapper_behaviour.expected.ml wrapper_behaviour.ml))))

(rule
 (copy lib_model.mli wrapper_model.mli))

(rule
 (target wrapper_model.ml)
 (package ortac-wrapper)
 (deps
  (package ortac-core)
  (package ortac-wrapper))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   wrapper
   (with-stderr-to
    errors_model
    (run ortac wrapper -o %{target} %{dep:lib_model.mli})))))

(rule
 (alias runtest)
 (package ortac-wrapper)
 (action
  (progn
   (diff errors_model.expected errors_model)
   (diff wrapper_model.expected.ml wrapper_model.ml))))

(rule
 (copy pascal.mli pascal_wrapped.mli))

(rule
 (target pascal_wrapped.ml)
 (package ortac-wrapper)
 (deps
  (package ortac-core)
  (package ortac-wrapper))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   wrapper
   (with-stderr-to
    pascal_errors
    (run ortac wrapper -o %{target} %{dep:pascal.mli})))))

(rule
 (alias runtest)
 (package ortac-wrapper)
 (action
  (progn
   (diff pascal_errors.expected pascal_errors)
   (diff pascal_wrapped.expected.ml pascal_wrapped.ml))))
