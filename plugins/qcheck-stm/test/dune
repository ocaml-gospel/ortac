(include dune.inc)

(cram
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm)))

(rule
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (ignore-stdout
    (with-stderr-to
     all_warnings_errors
     (run
      ortac
      qcheck-stm
      %{dep:all_warnings.mli}
      %{dep:all_warnings_config.ml}))))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (diff all_warnings_errors.expected all_warnings_errors)))

(library
 (name submodule)
 (modules submodule))

(rule
 (target submodule_tests.ml)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    submodule_errors
    (run
     ortac
     qcheck-stm
     %{dep:submodule.mli}
     %{dep:submodule_config.ml}
     --submodule=M
     -o
     %{target})))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (progn
   (diff submodule_errors.expected submodule_errors)
   (diff submodule_tests.expected.ml submodule_tests.ml))))

(test
 (name submodule_tests)
 (package ortac-qcheck-stm)
 (modules submodule_tests)
 (libraries
  qcheck-core
  qcheck-core.runner
  qcheck-stm.stm
  qcheck-stm.sequential
  qcheck-multicoretests-util
  ortac-runtime-qcheck-stm.sequential
  submodule)
 (action
  (echo
   "\n%{dep:submodule_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(library
 (name module_prefix_lib)
 (modules module_prefix))

(rule
 (target module_prefix_tests.ml)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    module_prefix_errors
    (run
     ortac
     qcheck-stm
     %{dep:module_prefix.mli}
     %{dep:module_prefix_config.ml}
     --module-prefix=Module_prefix_lib
     -o
     %{target})))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (progn
   (diff module_prefix_errors.expected module_prefix_errors)
   (diff module_prefix_tests.expected.ml module_prefix_tests.ml))))

(test
 (name module_prefix_tests)
 (package ortac-qcheck-stm)
 (modules module_prefix_tests)
 (libraries
  qcheck-core
  qcheck-core.runner
  qcheck-stm.stm
  qcheck-stm.sequential
  qcheck-multicoretests-util
  ortac-runtime-qcheck-stm.sequential
  module_prefix_lib)
 (action
  (echo
   "\n%{dep:module_prefix_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(library
 (name submodule_and_prefix_lib)
 (modules submodule_and_prefix))

(rule
 (target submodule_and_prefix_tests.ml)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    submodule_and_prefix_errors
    (run
     ortac
     qcheck-stm
     %{dep:submodule_and_prefix.mli}
     %{dep:submodule_and_prefix_config.ml}
     --submodule=M
     --module-prefix=Submodule_and_prefix_lib
     -o
     %{target})))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (progn
   (diff submodule_and_prefix_errors.expected submodule_and_prefix_errors)
   (diff
    submodule_and_prefix_tests.expected.ml
    submodule_and_prefix_tests.ml))))

(test
 (name submodule_and_prefix_tests)
 (package ortac-qcheck-stm)
 (modules submodule_and_prefix_tests)
 (libraries
  qcheck-core
  qcheck-core.runner
  qcheck-stm.stm
  qcheck-stm.sequential
  qcheck-multicoretests-util
  ortac-runtime-qcheck-stm.sequential
  submodule_and_prefix_lib)
 (action
  (echo
   "\n%{dep:submodule_and_prefix_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(library
 (name atomic)
 (modules atomic))

(rule
 (target atomic_tests.ml)
 (package ortac-qcheck-stm)
 (enabled_if
  (>= %{ocaml_version} 5))
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    atomic_errors
    (run
     ortac
     qcheck-stm
     %{dep:atomic.mli}
     %{dep:atomic_config.ml}
     --domain
     -o
     %{target})))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (enabled_if
  (>= %{ocaml_version} 5))
 (action
  (progn
   (diff atomic_errors.expected atomic_errors)
   (diff atomic_tests.expected.ml atomic_tests.ml))))

(test
 (name atomic_tests)
 (package ortac-qcheck-stm)
 (build_if
  (>= %{ocaml_version} 5))
 (modules atomic_tests)
 (libraries ortac-runtime-qcheck-stm.domain atomic)
 (action
  (echo
   "\n%{dep:atomic_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(rule
 (alias launchtests)
 (enabled_if
  (>= %{ocaml_version} 5))
 (action
  (run %{dep:atomic_tests.exe} -v)))

(executable
 (name dune_gen)
 (modules dune_gen))

(rule
 (action
  (with-stdout-to
   dune.inc.gen
   (run ./dune_gen.exe %{read-lines:dune_gen.args}))))

(rule
 (alias runtest)
 (action
  (diff dune.inc dune.inc.gen)))
