File "all_warnings_config.ml", line 9, characters 2-18:
9 |   let lenght = bob
      ^^^^^^^^^^^^^^^^
Warning: Ill formed frequency configuration is ignored.
         Frequencies should be configured as follow:
           let <function_name> = int litteral>.
File "all_warnings.mli", line 12, characters 0-52:
12 | val constant : unit
13 | (*@ constant
14 |     ensures true *)
Warning: Skipping constant: constants cannot be tested.
File "all_warnings.mli", line 17, characters 3-24:
17 | (*@ t = returning_sut a *)
        ^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping returning_sut: the specification of the function does not
         specify all fields of the model for the returned SUT value.
         Specifications should contain at least one
         "ensures x.contents = expr" where x is the returned SUT and expr can
         refer to other SUTs only under an old operator.
File "all_warnings.mli", line 22, characters 24-29:
22 | val incompatible_type : int t -> bool
                             ^^^^^
Warning: Skipping incompatible_type: the type of its SUT-type argument is
         incompatible with the configured SUT type: char t.
File "all_warnings.mli", line 25, characters 0-26:
25 | val no_spec : 'a t -> bool
     ^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping no_spec: functions without specifications cannot be tested.
File "all_warnings.mli", line 40, characters 3-37:
40 |   ('a -> 'a -> 'a -> 'a -> 'a -> bool) -> 'a t -> bool
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping functional_argument_arity: Can only test function arguments
         with arity < 5.
File "all_warnings.mli", line 44, characters 3-35:
44 |   ('a -> ('a -> 'a -> bool) -> bool) -> 'a t -> bool
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Third-order functions and above are not supported in functional_argument_third_order.
File "all_warnings.mli", line 48, characters 24-25:
48 | (*@ b = ghost_argument [x : bool] t *)
                             ^
Warning: Skipping ghost_argument: functions with a ghost argument are not
         supported.
File "all_warnings.mli", line 51, characters 6-7:
51 | (*@ [ x : bool ], b = ghost_returned_value t *)
           ^
Warning: Skipping ghost_returned_value: functions with a ghost returned value
         are not supported.
File "all_warnings.mli", line 34, characters 13-23:
34 |     modifies t.contents *)
                  ^^^^^^^^^^
Warning: Skipping ensures_not_found_for_next_state: model contents is
         declared as modified by the function but no suitable ensures clause
         was found. Specifications should contain at least one "ensures
         x.contents = expr" where x is the SUT and expr can refer to the SUT
         only under an old operator and can't refer to the returned value.
File "all_warnings.mli", line 66, characters 13-23:
66 |     modifies t.contents
                  ^^^^^^^^^^
Warning: Skipping term_refer_to_returned_value_next_state: model contents is
         declared as modified by the function but no suitable ensures clause
         was found. Specifications should contain at least one "ensures
         x.contents = expr" where x is the SUT and expr can refer to the SUT
         only under an old operator and can't refer to the returned value.
File "all_warnings.mli", line 19, characters 0-85:
19 | val multiple_sut_argument : 'a t -> 'a t -> bool
20 | (*@ b = multiple_sut_argument x y *)
Warning: Incomplete computation of the returned value in the specification of multiple_sut_argument. Failure message won't be able to display the expected returned value.
File "all_warnings.mli", line 36, characters 0-66:
36 | val type_not_supported : 'a t -> s
37 | (*@ s = type_not_supported t *)
Warning: Incomplete computation of the returned value in the specification of type_not_supported. Failure message won't be able to display the expected returned value.
File "all_warnings.mli", line 53, characters 0-144:
53 | val unsupported_quantification : 'a t -> bool
54 | (*@ b = unsupported_quantification t
55 |     ensures b = forall a. Sequence.mem a t.contents -> p a *)
Warning: Incomplete computation of the returned value in the specification of unsupported_quantification. Failure message won't be able to display the expected returned value.
File "all_warnings.mli", line 55, characters 16-58:
55 |     ensures b = forall a. Sequence.mem a t.contents -> p a *)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping clause: unsupported quantification.
File "all_warnings.mli", line 57, characters 0-111:
57 | val record_not_model_field : 'a t -> bool
58 | (*@ b = record_not_model_field t
59 |     requires Array.length t.v > 0 *)
Warning: Incomplete computation of the returned value in the specification of record_not_model_field. Failure message won't be able to display the expected returned value.
File "all_warnings.mli", line 61, characters 0-67:
61 | val return_tuple : 'a t -> 'a * bool
62 | (*@ (a, b) = return_tuple t *)
Warning: Incomplete computation of the returned value in the specification of return_tuple. Failure message won't be able to display the expected returned value.
File "all_warnings.mli", line 64, characters 0-278:
64 | val term_refer_to_returned_value_next_state : 'a t -> 'a option
65 | (*@ o = term_refer_to_returned_value_next_state t
66 |     modifies t.contents
67 |     ensures t.contents = match o with
68 |                         | None -> old t.contents
69 |                         | Some _ -> old t.contents *)
Warning: Incomplete computation of the returned value in the specification of term_refer_to_returned_value_next_state. Failure message won't be able to display the expected returned value.
File "all_warnings.mli", line 59, characters 26-29:
59 |     requires Array.length t.v > 0 *)
                               ^^^
Warning: Skipping clause: occurrences of the SUT in clauses are only
         supported to access its model fields.
File "all_warnings_config.ml", line 8, characters 6-9:
8 |   let bob = 42
          ^^^
Warning: Unused frequency from configuration file: bob.
File "all_warnings_config.ml", line 10, characters 6-14:
10 |   let constant = 42
           ^^^^^^^^
Warning: Unused frequency from configuration file: constant.
