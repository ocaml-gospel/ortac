(test
 (name wrapper)
 (package ortac-monolith)
 (libraries monolith ortac-runtime-monolith)
 (action
  (echo
   "\n%{dep:wrapper.exe} has been generated with the ortac-monolith plugin.\n")))

(rule
 (alias monolith_demo_random)
 (package ortac-monolith)
 (action
  (run %{dep:wrapper.exe})))

(rule
 (alias monolith_demo_afl)
 (package ortac-monolith)
 (action
  (progn
   (run mkdir inputs outputs)
   (no-infer
    (write-file inputs/input "some initial input"))
   (run afl-fuzz -i inputs -o outputs -- ./%{dep:wrapper.exe} @@))))

(rule
 (target wrapper.ml)
 (package ortac-monolith)
 (deps
  (package ortac-core)
  (package ortac-wrapper)
  (package ortac-monolith))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   monolith
   (with-stderr-to
    errors
    (run ortac monolith -o %{target} %{dep:lib.mli})))))

(rule
 (copy ../../../wrapper/test/generated/lib.mli lib.mli))

(rule
 (copy ../../../wrapper/test/generated/lib.ml lib.ml))

(rule
 (alias runtest)
 (package ortac-monolith)
 (action
  (progn
   (diff errors.expected errors)
   (diff wrapper.expected.ml wrapper.ml))))
