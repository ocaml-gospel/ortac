(rule
 (copy %{lib:lwt-dllist:lwt_dllist.ml} lwt_dllist_spec.ml))

(library
 (name lwt_dllist_spec)
 (modules lwt_dllist_spec)
 (flags
  (:standard -w -69))
 (package ortac-examples))

(rule
 (alias runtest)
 (mode promote)
 (action
  (with-stdout-to
   dune.lwt_dllist.inc
   (setenv
    ORTAC_ONLY_PLUGIN
    dune-rules
    (run ortac dune qcheck-stm lwt_dllist_spec.mli --package=ortac-examples)))))

(include dune.lwt_dllist.inc)

(rule
 (enabled_if %{bin-available:awk})
 (deps
  (:sig varray_sig.ml))
 (targets varray_spec.mli)
 (action
  (with-stdout-to
   %{targets}
   (run
    awk
    "/module type S = sig/,/^end/ { if ($0 != \"module type S = sig\" && $0 != \"end\") print }"
    %{sig}))))

; (library
;  (name varray_spec)
;  (modules varray_spec)
;  (libraries varray)
;  (package ortac-examples))

; (rule
;  (alias runtest)
;  (mode promote)
;  (action
;   (with-stdout-to
;    dune.varray.inc
;    (setenv
;     ORTAC_ONLY_PLUGIN
;     dune-rules
;     (run ortac dune qcheck-stm varray_spec.mli --package=ortac-examples)))))

; (include dune.varray.inc)

(rule
 (copy varray_spec.mli varray_circular_spec.mli))

(library
 (name varray_circular_spec)
 (modules varray_circular_spec)
 (libraries varray)
 (package ortac-examples))

(rule
 (alias runtest)
 (mode promote)
 (action
  (with-stdout-to
   dune.varray_circular.inc
   (setenv
    ORTAC_ONLY_PLUGIN
    dune-rules
    (run
     ortac
     dune
     qcheck-stm
     varray_circular_spec.mli
     --package=ortac-examples)))))

(include dune.varray_circular.inc)

(library
 (name braun_tree)
 (modules braun_tree)
 (package ortac-examples))

(rule
 (targets braun_tree_wrapped.mli)
 (deps braun_tree.mli)
 (action
  (copy %{deps} %{targets})))

(rule
 (mode promote)
 (targets braun_tree_wrapped.ml)
 (deps braun_tree.mli)
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   wrapper
   (ignore-stderr
    (run ortac wrapper -o %{targets} %{deps})))))
