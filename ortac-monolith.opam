# This file is generated by dune, edit dune-project instead
opam-version: "2.0"
version: "0.7.2"
synopsis: "Monolith plugin for Ortac"
description: """
The Monolith plugin for the Ortac command-line tool (provided by
the ortac-core package) can generate tests for a module with Gospel
specifications. The generated code will test that the function
specifications hold by using the Monolith library to compare the
behaviours of the original module with a module that adds runtime
checks around all function calls.
Ortac (OCaml Runtime Assertion Checking) is a tool to turn
executable Gospel specifications into code to test they hold.
"""
maintainer: ["Nicolas Osborne <nicolas.osborne@tarides.com>"]
authors: ["Nicolas Osborne <nicolas.osborne@tarides.com>"]
license: "MIT"
homepage: "https://github.com/ocaml-gospel/ortac"
bug-reports: "https://github.com/ocaml-gospel/ortac/issues"
depends: [
  "dune" {>= "3.9"}
  "ocaml" {>= "4.12.0"}
  "cmdliner" {>= "1.1.0"}
  "fmt"
  "ppxlib" {>= "0.26.0"}
  "gospel" {= "0.3.0"}
  "monolith" {with-test & >= "20201026"}
  "pprint" {with-test}
  "ortac-core" {= version}
  "ortac-wrapper"
  "ortac-runtime-monolith" {with-test}
  "odoc" {with-doc}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "--promote-install-files=false"
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
  ["dune" "install" "-p" name "--create-install-files" name]
]
dev-repo: "git+https://github.com/ocaml-gospel/ortac.git"
x-maintenance-intent: ["(latest)"]
